---
import BlogPost from '../../layouts/BlogPost.astro';
import {gql, GraphQLClient} from 'graphql-request';
export const prerender = true;

export async function getStaticPaths() {
	const client = new GraphQLClient(import.meta.env.WORDPRESS_URL + '/graphql');

	const query = gql`
		query {
			posts {
				nodes {
					title
					excerpt
					date
					modified
					slug
					featuredImage {
						node {
							sourceUrl
						}
					}
					content
				}
			}
		}
	`;

	const response = await client.request(query);
	 return response.posts.nodes.map((post : any) => ({
		params: {
			slug: post.slug
		},
		props : {
			title: post.title,
			slug: post.slug,
			description: post.excerpt,
			pubDate: post.date,
			updatedDate: post.modified,
			heroImage: post.featuredImage?.node.sourceUrl,
			content: post.content
		}
	 }));
};

type Props = {
	title: string;
	description: string;
	pubDate: string;
	updatedDate: string;
	heroImage: string;
	content: string;
}

const post = Astro.props;

---

<BlogPost {...post}>
	<Fragment set:html={post.content} />
</BlogPost>


